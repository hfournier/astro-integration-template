---
import config from "virtual:astro-seo-max/config";
import type { SeoMaxType } from "../types";
import Article from "./Article.astro";
import Book from "./Book.astro";
import MusicAlbum from "./MusicAlbum.astro";
import MusicPlaylist from "./MusicPlaylist.astro";
import MusicRadioStation from "./MusicRadioStation.astro";
import MusicSong from "./MusicSong.astro";
import OgAudio from "./OgAudio.astro";
import OgImage from "./OgImage.astro";
import OgOptional from "./OgOptional.astro";
import OgVideo from "./OgVideo.astro";
import Profile from "./Profile.astro";
import Twitter from "./Twitter.astro";
import Video from "./Video.astro";
import type { DefaultImageType } from "../types/seo";

type Props = {
	seo: SeoMaxType;
};

const { seo } = Astro.props;

const canonicalURL = Astro.site ? new URL(Astro.url.pathname, Astro.site) : Astro.url.href;

const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/*.{jpeg,jpg,png,gif}');

let defaultOgImage: DefaultImageType;
const defaultOgImagePath = config.site?.defaultImages?.openGraph?.imagePath;
const defaultOgImageAlt = config.site?.defaultImages?.openGraph?.imageAlt;
if (defaultOgImagePath) {
	if (!images[defaultOgImagePath]) {
		throw new Error(`The default Open Graph image: "${defaultOgImagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`)
	}
	else {
		defaultOgImage = {image: (await images[defaultOgImagePath]!()).default, alt: defaultOgImageAlt || undefined};
		if (defaultOgImage.image.height < 200 || defaultOgImage.image.width < 200) {
			throw new Error(`The default Open Graph image: "${defaultOgImagePath}" is too small. The minimum allowed Open Graph image dimension is 200 x 200 pixels`)
		}
	};
}

// let defaultTwitterImage: ImageMetadata | undefined
let defaultTwitterImage: DefaultImageType;
const defaultTwitterImagePath = config.site?.defaultImages?.twitter?.imagePath;
const defaultTwitterImageAlt = config.site?.defaultImages?.twitter?.imageAlt;
if (defaultTwitterImagePath) {
	if (!images[defaultTwitterImagePath]) {
		throw new Error(`The default Twitter image: "${defaultTwitterImagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif}"`)
	}
	else {
		defaultTwitterImage = {image: (await images[defaultTwitterImagePath]!()).default, alt: defaultTwitterImageAlt || undefined};
		if (defaultTwitterImage.image.height < 144 || defaultTwitterImage.image.width < 144) {
			throw new Error(`The default Twitter image: "${defaultTwitterImagePath}" is too small. The minimum allowed Twitter image dimension is 144 x 144 pixels`)
		}
	};
}
---

<title>
	{seo.title}
	{
		config.site?.name && !seo.title?.endsWith(config.site?.name)
			? ` ${config.site?.separator || "|"} ${config.site?.name}`
			: ""
	}
</title>
<meta name="description" content={seo.description} />
<meta charset={seo.charset || config.site?.charset || "utf-8"} />
{ seo.canonical || canonicalURL && (<link rel="canonical" href={seo.canonical || canonicalURL} />)}

{
	(seo.noFollow || seo.noIndex) && (
		<meta
			name="robots"
			content={`${seo.noIndex ? "noindex" : "index"}, ${seo.noFollow ? "nofollow" : "follow"}`}
		/>
	)
}

{
	seo.openGraph && (
		<>
			<meta property="og:title" content={seo.openGraph.title} />
			<meta property="og:type" content={seo.openGraph.type} />
			<meta property="og:url" content={seo.openGraph.url || Astro.url.href} />

			{seo.openGraph.optional && <OgOptional optional={seo.openGraph.optional} />}
			{(seo.openGraph.image || defaultOgImage) && (
				<OgImage image={seo.openGraph.image} imageAlt={seo.openGraph.imageAlt || ""} defaultImage={defaultOgImage} />
			)}
			{seo.openGraph.audio && <OgAudio audio={seo.openGraph.audio} />}
			{seo.openGraph.video && <OgVideo video={seo.openGraph.video} />}
			{seo.openGraph.article && <Article article={seo.openGraph.article} />}
			{seo.openGraph.book && <Book book={seo.openGraph.book} />}
			{seo.openGraph.profile && <Profile profile={seo.openGraph.profile} />}

			{seo.openGraph.type === "music.album" && seo.openGraph.musicAlbum && (
				<MusicAlbum music={seo.openGraph.musicAlbum} />
			)}
			{seo.openGraph.type === "music.song" && seo.openGraph.musicSong && (
				<MusicSong music={seo.openGraph.musicSong} />
			)}
			{seo.openGraph.type === "music.playlist" && seo.openGraph.musicPlaylist && (
				<MusicPlaylist music={seo.openGraph.musicPlaylist} />
			)}
			{seo.openGraph.type === "music.radio_station" && seo.openGraph.musicRadioStation && (
				<MusicRadioStation music={seo.openGraph.musicRadioStation} />
			)}

			{seo.openGraph.type === "video.movie" && seo.openGraph.videoMovie && (
				<Video video={seo.openGraph.videoMovie} />
			)}
			{seo.openGraph.type === "video.episode" && seo.openGraph.videoEpisode && (
				<Video video={seo.openGraph.videoEpisode} />
			)}
			{seo.openGraph.type === "video.tv_show" && seo.openGraph.videoTvShow && (
				<Video video={seo.openGraph.videoTvShow} />
			)}
			{seo.openGraph.type === "video.other" && seo.openGraph.videoOther && (
				<Video video={seo.openGraph.videoOther} />
			)}
		</>
	)
}

{seo.twitter && <Twitter twitter={seo.twitter} defaultImage={defaultTwitterImage ? defaultTwitterImage : undefined} />}
